# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders hidpi=on active_color="glow(0xffcba5f7)" inactive_color=0xff44475A width=14.0',
  'exec-and-forget sketchybar',
]

# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE PREVIOUS_WORKSPACE=$AEROSPACE_PREV_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers                         = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 50

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed           = 'move-mouse window-lazy-center'

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
  preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
  inner.horizontal = 28
  inner.vertical   = 28
  outer.left       = 36
  outer.bottom     = 36
  outer.top        = [{ monitor.built-in = 48 }, 84]
  outer.right      = 36

[workspace-to-monitor-force-assignment]
  1 = 'main'
  B = 'main'
  T = 'main'
  C = 'main'

  2 = ['secondary', 'G237HL', 'P27h-28 (1)']
  S = ['secondary', 'G237HL', 'P27h-28 (1)']
  E = ['secondary', 'G237HL', 'P27h-28 (1)']

  3 = 'built-in'
  M = 'built-in'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

  # All possible keys:
  # - Letters.        a, b, c, ..., z
  # - Numbers.        0, 1, 2, ..., 9
  # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
  # - F-keys.         f1, f2, ..., f20
  # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
  #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
  #                   backspace, tab
  # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
  #                   keypadMinus, keypadMultiply, keypadPlus
  # - Arrows.         left, down, up, right

  # All possible modifiers: cmd, alt, ctrl, shift

  # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

  # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
  # You can uncomment the following lines to open up terminal with alt + enter shortcut
  # (like in i3)
  # alt-enter = '''exec-and-forget osascript -e '
  # tell application "Terminal"
  #     do script
  #     activate
  # end tell'
  # '''

  # See: https://nikitabobko.github.io/AeroSpace/commands#layout
  ctrl-cmd-slash = 'layout tiles horizontal vertical'
  ctrl-cmd-comma = 'layout accordion horizontal vertical'

  # See: https://nikitabobko.github.io/AeroSpace/commands#focus
  ctrl-cmd-h = 'focus left'
  ctrl-cmd-j = 'focus down'
  ctrl-cmd-k = 'focus up'
  ctrl-cmd-l = 'focus right'

  # See: https://nikitabobko.github.io/AeroSpace/commands#move
  ctrl-alt-h = 'move left'
  ctrl-alt-j = 'move down'
  ctrl-alt-k = 'move up'
  ctrl-alt-l = 'move right'

  # See: https://nikitabobko.github.io/AeroSpace/commands#resize
  ctrl-cmd-minus = 'resize smart -50'
  ctrl-cmd-equal = 'resize smart +50'

  # Browser
  ctrl-cmd-b = 'workspace B'
  # Music
  ctrl-cmd-m = 'workspace M'
  # Terminal
  ctrl-cmd-t = 'workspace T'
  # Email (+ Slack)
  ctrl-cmd-e = 'workspace E'
  # Code
  ctrl-cmd-c = 'workspace C'
  # Secondary
  ctrl-cmd-s = 'workspace S'

  # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
  ctrl-cmd-1 = 'workspace 1'
  ctrl-cmd-2 = 'workspace 2'
  ctrl-cmd-3 = 'workspace 3'
  ctrl-cmd-4 = 'workspace 4'
  ctrl-cmd-5 = 'workspace 5'
  ctrl-cmd-6 = 'workspace 6'
  ctrl-cmd-7 = 'workspace 7'
  ctrl-cmd-8 = 'workspace 8'
  ctrl-cmd-9 = 'workspace 9'
  ctrl-cmd-a = 'workspace A'
  ctrl-cmd-g = 'workspace G'
  ctrl-cmd-i = 'workspace I'
  ctrl-cmd-o = 'workspace O'
  ctrl-cmd-q = 'workspace Q'
  ctrl-cmd-r = 'workspace R'
  ctrl-cmd-u = 'workspace U'
  ctrl-cmd-v = 'workspace V'
  ctrl-cmd-w = 'workspace W'
  ctrl-cmd-x = 'workspace X'
  ctrl-cmd-y = 'workspace Y'
  ctrl-cmd-z = 'workspace Z'

  # Disabled
  # ctrl-cmd-d = 'workspace D' // system-wide Mac shortcut to open Dictionary

  # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
  ctrl-alt-1 = 'move-node-to-workspace 1'
  ctrl-alt-2 = 'move-node-to-workspace 2'
  ctrl-alt-3 = 'move-node-to-workspace 3'
  ctrl-alt-4 = 'move-node-to-workspace 4'
  ctrl-alt-5 = 'move-node-to-workspace 5'
  ctrl-alt-6 = 'move-node-to-workspace 6'
  ctrl-alt-7 = 'move-node-to-workspace 7'
  ctrl-alt-8 = 'move-node-to-workspace 8'
  ctrl-alt-9 = 'move-node-to-workspace 9'
  ctrl-alt-a = 'move-node-to-workspace A'
  ctrl-alt-b = 'move-node-to-workspace B'
  ctrl-alt-c = 'move-node-to-workspace C'
  ctrl-alt-e = 'move-node-to-workspace E'
  ctrl-alt-g = 'move-node-to-workspace G'
  ctrl-alt-i = 'move-node-to-workspace I'
  ctrl-alt-m = 'move-node-to-workspace M'
  ctrl-alt-o = 'move-node-to-workspace O'
  ctrl-alt-q = 'move-node-to-workspace Q'
  ctrl-alt-r = 'move-node-to-workspace R'
  ctrl-alt-s = 'move-node-to-workspace S'
  ctrl-alt-t = 'move-node-to-workspace T'
  ctrl-alt-u = 'move-node-to-workspace U'
  ctrl-alt-v = 'move-node-to-workspace V'
  ctrl-alt-w = 'move-node-to-workspace W'
  ctrl-alt-x = 'move-node-to-workspace X'
  ctrl-alt-y = 'move-node-to-workspace Y'
  ctrl-alt-z = 'move-node-to-workspace Z'

  ctrl-alt-f = 'fullscreen'
  # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
  ctrl-alt-n = 'move-workspace-to-monitor --wrap-around next'
  ctrl-alt-p = 'move-workspace-to-monitor --wrap-around prev'

  # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
  ctrl-cmd-tab = 'workspace-back-and-forth'

  # See: https://nikitabobko.github.io/AeroSpace/commands#mode
  ctrl-alt-space = [
    'mode service',
    'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=service',
  ]

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
  esc = [
    'mode main',
    'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=main',
  ]

  r = [
    'reload-config',
    'mode main',
    'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=main',
  ]

  # reset layout
  minus = [
    'flatten-workspace-tree',
    'mode main',
    'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=main',
  ]

  # Toggle between floating and tiling layout
  f = [
    'layout floating tiling',
    'mode main',
    'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=main',
  ]

  backspace = [
    'close-all-windows-but-current',
    'mode main',
    'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=main',
  ]

  # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
  #s = ['layout sticky tiling', 'mode main']

  ctrl-alt-h = [
    'join-with left',
    'mode main',
    'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=main',
  ]
  ctrl-alt-j = [
    'join-with down',
    'mode main',
    'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=main',
  ]
  ctrl-alt-k = [
    'join-with up',
    'mode main',
    'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=main',
  ]
  ctrl-alt-l = [
    'join-with right',
    'mode main',
    'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=main',
  ]

[[on-window-detected]]
  if.app-id = 'company.thebrowser.Browser'
  run       = 'move-node-to-workspace B'

[[on-window-detected]]
  if.app-id = 'com.google.Chrome'
  run       = 'move-node-to-workspace B'

[[on-window-detected]]
  if.app-id = 'org.mozilla.firefox'
  run       = 'move-node-to-workspace S'

[[on-window-detected]]
  if.app-id = 'com.amazon.Amazon-Chime'
  run       = 'move-node-to-workspace S'

[[on-window-detected]]
  if.app-id = 'com.spotify.client'
  run       = 'move-node-to-workspace M'

[[on-window-detected]]
  if.app-id = 'com.mitchellh.ghostty'
  run       = 'move-node-to-workspace T'

[[on-window-detected]]
  if.app-id = 'com.readdle.SparkDesktop.appstore'
  run       = 'move-node-to-workspace E'

[[on-window-detected]]
  if.app-id = 'com.microsoft.Outlook'
  run       = 'move-node-to-workspace E'

[[on-window-detected]]
  if.app-id = 'com.microsoft.Word'
  run       = 'move-node-to-workspace W'

[[on-window-detected]]
  if.app-id = 'com.tinyspeck.slackmacgap'
  run       = 'move-node-to-workspace E'

[[on-window-detected]]
  if.app-id = 'com.microsoft.VSCode'
  run       = 'move-node-to-workspace C'

[[on-window-detected]]
  if.app-id = 'com.jetbrains.intellij'
  run       = 'move-node-to-workspace C'
